name: Publish Docker Image

on:
  push:
    branches:
      - "main"
    tags:
      - ghcr.io/propek/rehlds-cstrike:latest
      - ghcr.io/propek/rehlds-cstrike:*

env:
  ARCHITECTURES: linux/amd64
  IMAGE_NAME: rehlds-cstrike
  IMAGE_NAMESPACE: propek

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3.1.0
        with:
          submodules: recursive

      - name: Set up QEMU for multi-arch builds with buildx
        uses: docker/setup-qemu-action@v2
        with:
          platforms: ${{ env.ARCHITECTURES }}

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to ghcr
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine Docker tag
        id: docker_tag
        run: |
          if [[ startsWith("${{ github.ref }}", "refs/tags/") ]]; then
            echo "::set-output name=tag::${{ github.ref_name }}"
          else
            echo "::set-output name=tag::${{ github.sha }}"
          fi

      - id: metadata
        uses: docker/metadata-action@v5.5.1
        with:
          images: |
            ghcr.io/${{ env.IMAGE_NAMESPACE }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{major}}.{{minor}},enable=true
            type=semver,pattern=latest,enable=true
            type=edge,branch=main
          sha: ${{ github.sha }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5.1.0
        with:
          context: .
          platforms: ${{ env.ARCHITECTURES }}
          push: true
          file: Dockerfile
          provenance: false
          tags: ${{ steps.metadata.outputs.tags }},ghcr.io/${{ env.IMAGE_NAMESPACE }}/${{ env.IMAGE_NAME }}:${{ steps.docker_tag.outputs.tag }}
          labels: ${{ steps.metadata.outputs.labels }}

      - name: Print working directory (Debug)
        run: pwd

      - name: List files in build context (Debug)
        run: ls -l
